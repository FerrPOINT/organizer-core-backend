from fastapi import FastAPI
from starlette.exceptions import HTTPException as StarletteHTTPException
from starlette.middleware import Middleware

from app.core.error_handler import ErrorHandler
from app.core.logger import LogMiddleware, logger
from app.routes import auth, users
from app.util.init_db import init_default_admin  #
from app.util.openapi_saver import save_openapi_schema, save_openapi_schema_yaml

logger.info("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...")
init_default_admin()  # ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞

logger.info("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∞–ø–∏")
app = FastAPI(
    title="Organizer Core API",
    middleware=[Middleware(LogMiddleware)]
)

logger.info("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç—ã")
app.include_router(auth.router)
app.include_router(users.router)

logger.info("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫")
app.add_exception_handler(StarletteHTTPException, ErrorHandler.http_exception_handler)
app.add_exception_handler(Exception, ErrorHandler.general_exception_handler)

logger.info("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI –∑–∞–ø—É—â–µ–Ω–æ!")

logger.info("‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–ø–µ–Ω–∞–ø–∏ —Å—Ö–µ–º—ã")
save_openapi_schema(app)
save_openapi_schema_yaml(app)
