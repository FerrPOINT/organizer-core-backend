# app/main.py
from fastapi import FastAPI
from starlette.exceptions import HTTPException as StarletteHTTPException
from starlette.middleware import Middleware

from app.core.error_handler import ErrorHandler
from app.core.logger import LogMiddleware, logger
from app.init_db import init_default_admin  #
from app.routes import auth, users
from app.services.openapi_saver import save_openapi_schema, save_openapi_schema_yaml
from app.settings import admin_settings  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

logger.info("[üöÄ] –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...")
init_default_admin()  # ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞

app = FastAPI(
    title="Organizer Core API",
    middleware=[Middleware(LogMiddleware)]
)
# ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç—ã
app.include_router(auth.router)
app.include_router(users.router)

# ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
app.add_exception_handler(StarletteHTTPException, ErrorHandler.http_exception_handler)
app.add_exception_handler(Exception, ErrorHandler.general_exception_handler)

logger.info("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI –∑–∞–ø—É—â–µ–Ω–æ!")

# ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–ø–µ–Ω–∞–ø–∏ —Å—Ö–µ–º—ã
save_openapi_schema(app)
save_openapi_schema_yaml(app)


# TODO: —Ç–µ—Å—Ç–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç, —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ê–ü–ò
@app.get("/")
def read_root():
    return {"message": f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Organizer Core API! DB: {admin_settings.ADMIN_NAME}"}
