from fastapi import Request
from fastapi.exceptions import RequestValidationError
from fastapi.responses import JSONResponse
from loguru import logger
from starlette.exceptions import HTTPException as StarletteHTTPException


class ErrorHandler:
    @staticmethod
    async def http_exception_handler(request: Request, exc: StarletteHTTPException) -> JSONResponse:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–∂–∏–¥–∞–µ–º—ã—Ö HTTP-–∏—Å–∫–ª—é—á–µ–Ω–∏–π (404, 422 –∏ –¥—Ä.).
        """
        logger.warning(f"üö® HTTP {exc.status_code} | {request.method} {request.url} ‚Äî {exc.detail}")
        return JSONResponse(status_code=exc.status_code, content={"detail": exc.detail})

    @staticmethod
    async def general_exception_handler(request: Request, exc: Exception) -> JSONResponse:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö (–Ω–µ–ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö) –∏—Å–∫–ª—é—á–µ–Ω–∏–π.
        """
        logger.exception(f"üî• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ {request.method} {request.url}", exc)
        return JSONResponse(status_code=500, content={"detail": "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"})

    @staticmethod
    async def validation_exception_handler(request: Request, exc: RequestValidationError):
        logger.warning(
            f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–∏ {request.method} {request.url}\n"
            f"üì¶ –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞: {exc.body}\n"
            f"üîç –û—à–∏–±–∫–∏: {exc.errors()}"
        )
        return JSONResponse(status_code=422, content={"detail": exc.errors()})
